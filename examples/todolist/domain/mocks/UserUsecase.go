// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import domain "todolist/domain"
import mock "github.com/stretchr/testify/mock"

// UserUsecase is an autogenerated mock type for the UserUsecase type
type UserUsecase struct {
	mock.Mock
}

// Login provides a mock function with given fields: ctx, u
func (_m *UserUsecase) Login(ctx context.Context, u *domain.User) (string, error) {
	ret := _m.Called(ctx, u)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *domain.User) string); ok {
		r0 = rf(ctx, u)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *domain.User) error); ok {
		r1 = rf(ctx, u)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: ctx, u
func (_m *UserUsecase) Register(ctx context.Context, u *domain.User) error {
	ret := _m.Called(ctx, u)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.User) error); ok {
		r0 = rf(ctx, u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
