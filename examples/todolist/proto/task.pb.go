// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/task.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DueDate              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	Completed            bool                 `protobuf:"varint,5,opt,name=completed,proto3" json:"completed,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetDueDate() *timestamp.Timestamp {
	if m != nil {
		return m.DueDate
	}
	return nil
}

func (m *Task) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *Task) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Task) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type FetchTaskReq struct {
	XAccessToken         string   `protobuf:"bytes,1,opt,name=xAccessToken,proto3" json:"xAccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchTaskReq) Reset()         { *m = FetchTaskReq{} }
func (m *FetchTaskReq) String() string { return proto.CompactTextString(m) }
func (*FetchTaskReq) ProtoMessage()    {}
func (*FetchTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{1}
}

func (m *FetchTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchTaskReq.Unmarshal(m, b)
}
func (m *FetchTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchTaskReq.Marshal(b, m, deterministic)
}
func (m *FetchTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchTaskReq.Merge(m, src)
}
func (m *FetchTaskReq) XXX_Size() int {
	return xxx_messageInfo_FetchTaskReq.Size(m)
}
func (m *FetchTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_FetchTaskReq proto.InternalMessageInfo

func (m *FetchTaskReq) GetXAccessToken() string {
	if m != nil {
		return m.XAccessToken
	}
	return ""
}

type FetchTaskResp struct {
	Task                 []*Task  `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchTaskResp) Reset()         { *m = FetchTaskResp{} }
func (m *FetchTaskResp) String() string { return proto.CompactTextString(m) }
func (*FetchTaskResp) ProtoMessage()    {}
func (*FetchTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{2}
}

func (m *FetchTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchTaskResp.Unmarshal(m, b)
}
func (m *FetchTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchTaskResp.Marshal(b, m, deterministic)
}
func (m *FetchTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchTaskResp.Merge(m, src)
}
func (m *FetchTaskResp) XXX_Size() int {
	return xxx_messageInfo_FetchTaskResp.Size(m)
}
func (m *FetchTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_FetchTaskResp proto.InternalMessageInfo

func (m *FetchTaskResp) GetTask() []*Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type GetByIDTaskReq struct {
	XAccessToken         string   `protobuf:"bytes,1,opt,name=xAccessToken,proto3" json:"xAccessToken,omitempty"`
	IdTask               uint64   `protobuf:"varint,2,opt,name=idTask,proto3" json:"idTask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDTaskReq) Reset()         { *m = GetByIDTaskReq{} }
func (m *GetByIDTaskReq) String() string { return proto.CompactTextString(m) }
func (*GetByIDTaskReq) ProtoMessage()    {}
func (*GetByIDTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{3}
}

func (m *GetByIDTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDTaskReq.Unmarshal(m, b)
}
func (m *GetByIDTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDTaskReq.Marshal(b, m, deterministic)
}
func (m *GetByIDTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDTaskReq.Merge(m, src)
}
func (m *GetByIDTaskReq) XXX_Size() int {
	return xxx_messageInfo_GetByIDTaskReq.Size(m)
}
func (m *GetByIDTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDTaskReq proto.InternalMessageInfo

func (m *GetByIDTaskReq) GetXAccessToken() string {
	if m != nil {
		return m.XAccessToken
	}
	return ""
}

func (m *GetByIDTaskReq) GetIdTask() uint64 {
	if m != nil {
		return m.IdTask
	}
	return 0
}

type GetByIDTaskResp struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDTaskResp) Reset()         { *m = GetByIDTaskResp{} }
func (m *GetByIDTaskResp) String() string { return proto.CompactTextString(m) }
func (*GetByIDTaskResp) ProtoMessage()    {}
func (*GetByIDTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{4}
}

func (m *GetByIDTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDTaskResp.Unmarshal(m, b)
}
func (m *GetByIDTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDTaskResp.Marshal(b, m, deterministic)
}
func (m *GetByIDTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDTaskResp.Merge(m, src)
}
func (m *GetByIDTaskResp) XXX_Size() int {
	return xxx_messageInfo_GetByIDTaskResp.Size(m)
}
func (m *GetByIDTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDTaskResp proto.InternalMessageInfo

func (m *GetByIDTaskResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CreateTaskReq struct {
	XAccessToken         string   `protobuf:"bytes,1,opt,name=xAccessToken,proto3" json:"xAccessToken,omitempty"`
	Task                 *Task    `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskReq) Reset()         { *m = CreateTaskReq{} }
func (m *CreateTaskReq) String() string { return proto.CompactTextString(m) }
func (*CreateTaskReq) ProtoMessage()    {}
func (*CreateTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{5}
}

func (m *CreateTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskReq.Unmarshal(m, b)
}
func (m *CreateTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskReq.Marshal(b, m, deterministic)
}
func (m *CreateTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskReq.Merge(m, src)
}
func (m *CreateTaskReq) XXX_Size() int {
	return xxx_messageInfo_CreateTaskReq.Size(m)
}
func (m *CreateTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskReq proto.InternalMessageInfo

func (m *CreateTaskReq) GetXAccessToken() string {
	if m != nil {
		return m.XAccessToken
	}
	return ""
}

func (m *CreateTaskReq) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CreateTaskResp struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskResp) Reset()         { *m = CreateTaskResp{} }
func (m *CreateTaskResp) String() string { return proto.CompactTextString(m) }
func (*CreateTaskResp) ProtoMessage()    {}
func (*CreateTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{6}
}

func (m *CreateTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskResp.Unmarshal(m, b)
}
func (m *CreateTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskResp.Marshal(b, m, deterministic)
}
func (m *CreateTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskResp.Merge(m, src)
}
func (m *CreateTaskResp) XXX_Size() int {
	return xxx_messageInfo_CreateTaskResp.Size(m)
}
func (m *CreateTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskResp proto.InternalMessageInfo

func (m *CreateTaskResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *CreateTaskResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateTaskReq struct {
	XAccessToken         string   `protobuf:"bytes,1,opt,name=xAccessToken,proto3" json:"xAccessToken,omitempty"`
	IdTask               uint64   `protobuf:"varint,2,opt,name=idTask,proto3" json:"idTask,omitempty"`
	Task                 *Task    `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskReq) Reset()         { *m = UpdateTaskReq{} }
func (m *UpdateTaskReq) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskReq) ProtoMessage()    {}
func (*UpdateTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{7}
}

func (m *UpdateTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskReq.Unmarshal(m, b)
}
func (m *UpdateTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskReq.Marshal(b, m, deterministic)
}
func (m *UpdateTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskReq.Merge(m, src)
}
func (m *UpdateTaskReq) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskReq.Size(m)
}
func (m *UpdateTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskReq proto.InternalMessageInfo

func (m *UpdateTaskReq) GetXAccessToken() string {
	if m != nil {
		return m.XAccessToken
	}
	return ""
}

func (m *UpdateTaskReq) GetIdTask() uint64 {
	if m != nil {
		return m.IdTask
	}
	return 0
}

func (m *UpdateTaskReq) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateTaskResp struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskResp) Reset()         { *m = UpdateTaskResp{} }
func (m *UpdateTaskResp) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResp) ProtoMessage()    {}
func (*UpdateTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{8}
}

func (m *UpdateTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResp.Unmarshal(m, b)
}
func (m *UpdateTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResp.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResp.Merge(m, src)
}
func (m *UpdateTaskResp) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResp.Size(m)
}
func (m *UpdateTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResp proto.InternalMessageInfo

func (m *UpdateTaskResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *UpdateTaskResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteTaskReq struct {
	XAccessToken         string   `protobuf:"bytes,1,opt,name=xAccessToken,proto3" json:"xAccessToken,omitempty"`
	IdTask               uint64   `protobuf:"varint,2,opt,name=idTask,proto3" json:"idTask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskReq) Reset()         { *m = DeleteTaskReq{} }
func (m *DeleteTaskReq) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskReq) ProtoMessage()    {}
func (*DeleteTaskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{9}
}

func (m *DeleteTaskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskReq.Unmarshal(m, b)
}
func (m *DeleteTaskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskReq.Marshal(b, m, deterministic)
}
func (m *DeleteTaskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskReq.Merge(m, src)
}
func (m *DeleteTaskReq) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskReq.Size(m)
}
func (m *DeleteTaskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskReq proto.InternalMessageInfo

func (m *DeleteTaskReq) GetXAccessToken() string {
	if m != nil {
		return m.XAccessToken
	}
	return ""
}

func (m *DeleteTaskReq) GetIdTask() uint64 {
	if m != nil {
		return m.IdTask
	}
	return 0
}

type DeleteTaskResp struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskResp) Reset()         { *m = DeleteTaskResp{} }
func (m *DeleteTaskResp) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskResp) ProtoMessage()    {}
func (*DeleteTaskResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5de11d747d3f16e6, []int{10}
}

func (m *DeleteTaskResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskResp.Unmarshal(m, b)
}
func (m *DeleteTaskResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskResp.Marshal(b, m, deterministic)
}
func (m *DeleteTaskResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskResp.Merge(m, src)
}
func (m *DeleteTaskResp) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskResp.Size(m)
}
func (m *DeleteTaskResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskResp proto.InternalMessageInfo

func (m *DeleteTaskResp) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *DeleteTaskResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "proto.Task")
	proto.RegisterType((*FetchTaskReq)(nil), "proto.FetchTaskReq")
	proto.RegisterType((*FetchTaskResp)(nil), "proto.FetchTaskResp")
	proto.RegisterType((*GetByIDTaskReq)(nil), "proto.GetByIDTaskReq")
	proto.RegisterType((*GetByIDTaskResp)(nil), "proto.GetByIDTaskResp")
	proto.RegisterType((*CreateTaskReq)(nil), "proto.CreateTaskReq")
	proto.RegisterType((*CreateTaskResp)(nil), "proto.CreateTaskResp")
	proto.RegisterType((*UpdateTaskReq)(nil), "proto.UpdateTaskReq")
	proto.RegisterType((*UpdateTaskResp)(nil), "proto.UpdateTaskResp")
	proto.RegisterType((*DeleteTaskReq)(nil), "proto.DeleteTaskReq")
	proto.RegisterType((*DeleteTaskResp)(nil), "proto.DeleteTaskResp")
}

func init() { proto.RegisterFile("proto/task.proto", fileDescriptor_5de11d747d3f16e6) }

var fileDescriptor_5de11d747d3f16e6 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0x1d, 0x27, 0xc1, 0xe3, 0x26, 0xa0, 0xa1, 0xad, 0x2c, 0x0b, 0xa9, 0x96, 0x4f, 0x3e,
	0x39, 0xc8, 0x20, 0x44, 0x25, 0x2e, 0x85, 0x08, 0x84, 0xc2, 0xc9, 0x84, 0x1f, 0xe0, 0xda, 0x43,
	0x58, 0x25, 0xa9, 0x97, 0xec, 0x06, 0xc1, 0x1f, 0xe1, 0x97, 0xf0, 0x03, 0x91, 0xd7, 0x9f, 0x0b,
	0x81, 0xb6, 0x6a, 0x4f, 0xc9, 0xcc, 0xce, 0x7b, 0xf3, 0x34, 0xef, 0x19, 0x1e, 0xf1, 0x5d, 0x21,
	0x8b, 0x99, 0x4c, 0xc5, 0x3a, 0x52, 0x7f, 0x71, 0xa8, 0x7e, 0xbc, 0xb3, 0x55, 0x51, 0xac, 0x36,
	0x34, 0x53, 0xd5, 0xe5, 0xfe, 0xf3, 0x4c, 0xb2, 0x2d, 0x09, 0x99, 0x6e, 0x79, 0x35, 0x17, 0xfc,
	0x34, 0xc1, 0x5a, 0xa6, 0x62, 0x8d, 0x53, 0x30, 0x59, 0xee, 0x1a, 0xbe, 0x11, 0x5a, 0x89, 0xc9,
	0x72, 0x3c, 0x86, 0xa1, 0x64, 0x72, 0x43, 0xae, 0xe9, 0x1b, 0xa1, 0x9d, 0x54, 0x05, 0xfa, 0xe0,
	0xe4, 0x24, 0xb2, 0x1d, 0xe3, 0x92, 0x15, 0x57, 0xee, 0x40, 0xbd, 0xf5, 0x5b, 0xf8, 0x1c, 0xc6,
	0xf9, 0x9e, 0xe6, 0xa9, 0x24, 0xd7, 0xf2, 0x8d, 0xd0, 0x89, 0xbd, 0xa8, 0xd2, 0x10, 0x35, 0x1a,
	0xa2, 0x65, 0xa3, 0x21, 0x69, 0x46, 0xf1, 0x09, 0xd8, 0x59, 0xb1, 0xe5, 0x1b, 0x92, 0x94, 0xbb,
	0x43, 0xdf, 0x08, 0x1f, 0x24, 0x5d, 0x03, 0x5f, 0x82, 0x9d, 0xed, 0x28, 0x95, 0x94, 0x5f, 0x48,
	0x77, 0x74, 0x2d, 0x6b, 0x37, 0x5c, 0x22, 0xf7, 0x3c, 0xaf, 0x91, 0xe3, 0xeb, 0x91, 0xed, 0x70,
	0x10, 0xc3, 0xd1, 0x5b, 0x92, 0xd9, 0x97, 0xf2, 0x38, 0x09, 0x7d, 0xc5, 0x00, 0x8e, 0xbe, 0x5f,
	0x64, 0x19, 0x09, 0xb1, 0x2c, 0xd6, 0x74, 0xa5, 0x2e, 0x65, 0x27, 0x5a, 0x2f, 0x78, 0x0a, 0x93,
	0x1e, 0x46, 0x70, 0x3c, 0x03, 0xab, 0xf4, 0xc4, 0x35, 0xfc, 0x41, 0xe8, 0xc4, 0x4e, 0xb5, 0x32,
	0x52, 0xcf, 0xea, 0x21, 0xf8, 0x00, 0xd3, 0x77, 0x24, 0x5f, 0xff, 0x78, 0x3f, 0xbf, 0xc5, 0x1e,
	0x3c, 0x85, 0x11, 0xcb, 0x4b, 0x80, 0x32, 0xc7, 0x4a, 0xea, 0x2a, 0x88, 0xe1, 0xa1, 0xc6, 0xa6,
	0x29, 0x30, 0x0e, 0x2b, 0x58, 0xc2, 0xe4, 0x8d, 0x3a, 0xd7, 0x6d, 0x04, 0x34, 0xac, 0xe6, 0xbf,
	0x58, 0x17, 0x30, 0xed, 0xb3, 0xde, 0x40, 0x08, 0xba, 0x30, 0xde, 0x92, 0x10, 0xe9, 0xaa, 0x89,
	0x5c, 0x53, 0x06, 0x1b, 0x98, 0x7c, 0x52, 0xbe, 0xdc, 0xc3, 0x8d, 0x5a, 0x1d, 0x83, 0xff, 0x48,
	0xef, 0x6f, 0xbb, 0x9b, 0xf4, 0x05, 0x4c, 0xe6, 0x54, 0x86, 0xf8, 0x3e, 0xec, 0x5d, 0xc0, 0xb4,
	0x4f, 0x76, 0x27, 0x65, 0xf1, 0x2f, 0x13, 0x9c, 0x72, 0xf0, 0x23, 0xed, 0xbe, 0xb1, 0x8c, 0xf0,
	0x05, 0xd8, 0x6d, 0x76, 0xf1, 0x71, 0xcd, 0xd4, 0xff, 0x02, 0xbc, 0xe3, 0xbf, 0x9b, 0x82, 0xe3,
	0x2b, 0x70, 0x7a, 0x99, 0xc3, 0x93, 0x7a, 0x48, 0x4f, 0xb5, 0x77, 0x7a, 0xa8, 0x2d, 0x38, 0x9e,
	0x03, 0x74, 0x39, 0xc1, 0x66, 0x83, 0x16, 0x48, 0xef, 0xe4, 0x40, 0xb7, 0x82, 0x76, 0x3e, 0xb5,
	0x50, 0x2d, 0x28, 0x2d, 0xf4, 0x0f, 0x43, 0xcf, 0x01, 0xba, 0x43, 0xb6, 0x50, 0xcd, 0xa8, 0x16,
	0xaa, 0x5f, 0xfc, 0x72, 0xa4, 0xba, 0xcf, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x76, 0x3f, 0x54,
	0x04, 0x72, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	FetchTask(ctx context.Context, in *FetchTaskReq, opts ...grpc.CallOption) (*FetchTaskResp, error)
	GetByIDTask(ctx context.Context, in *GetByIDTaskReq, opts ...grpc.CallOption) (*GetByIDTaskResp, error)
	CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error)
	UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error)
	DeleteTask(ctx context.Context, in *DeleteTaskReq, opts ...grpc.CallOption) (*DeleteTaskResp, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) FetchTask(ctx context.Context, in *FetchTaskReq, opts ...grpc.CallOption) (*FetchTaskResp, error) {
	out := new(FetchTaskResp)
	err := c.cc.Invoke(ctx, "/proto.TaskService/FetchTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetByIDTask(ctx context.Context, in *GetByIDTaskReq, opts ...grpc.CallOption) (*GetByIDTaskResp, error) {
	out := new(GetByIDTaskResp)
	err := c.cc.Invoke(ctx, "/proto.TaskService/GetByIDTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error) {
	out := new(CreateTaskResp)
	err := c.cc.Invoke(ctx, "/proto.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error) {
	out := new(UpdateTaskResp)
	err := c.cc.Invoke(ctx, "/proto.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskReq, opts ...grpc.CallOption) (*DeleteTaskResp, error) {
	out := new(DeleteTaskResp)
	err := c.cc.Invoke(ctx, "/proto.TaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	FetchTask(context.Context, *FetchTaskReq) (*FetchTaskResp, error)
	GetByIDTask(context.Context, *GetByIDTaskReq) (*GetByIDTaskResp, error)
	CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error)
	UpdateTask(context.Context, *UpdateTaskReq) (*UpdateTaskResp, error)
	DeleteTask(context.Context, *DeleteTaskReq) (*DeleteTaskResp, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) FetchTask(ctx context.Context, req *FetchTaskReq) (*FetchTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchTask not implemented")
}
func (*UnimplementedTaskServiceServer) GetByIDTask(ctx context.Context, req *GetByIDTaskReq) (*GetByIDTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByIDTask not implemented")
}
func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskReq) (*CreateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTask(ctx context.Context, req *UpdateTaskReq) (*UpdateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedTaskServiceServer) DeleteTask(ctx context.Context, req *DeleteTaskReq) (*DeleteTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_FetchTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).FetchTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/FetchTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).FetchTask(ctx, req.(*FetchTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetByIDTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetByIDTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/GetByIDTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetByIDTask(ctx, req.(*GetByIDTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*DeleteTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchTask",
			Handler:    _TaskService_FetchTask_Handler,
		},
		{
			MethodName: "GetByIDTask",
			Handler:    _TaskService_GetByIDTask_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/task.proto",
}
